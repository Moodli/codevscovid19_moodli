name: Moodli CI/CD
on:
  push:
    branches:
      - main
      - dockerization

# Global variables
env:
  USER_NAME: ${{ github.actor }}
  GITHUB_SHA: ${{ github.sha }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SERVER_SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}
  SERVER_IP: ${{ secrets.SERVER_IP }}
  SERVER_USER_NAME: ${{ secrets.SERVER_USER_NAME }}
  REPOSITORY: ${{ github.REPOSITORY_OWNER }}
  TWITTER_API_CRED: ${{ secrets.TWITTER_API_CRED }}

# Jobs
jobs:

# Continuous integration
  CI:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
    # Clone the repo
      - name: Check Out Repo 
        uses: actions/checkout@v2

    # Build the image 
      - name: Build Image
        run: |
          VERSION=$(echo "${GITHUB_SHA:0:6}")
          REPO_LOWER=$(echo $REPOSITORY | tr '[A-Z]' '[a-z]')
          echo "IMAGE_NAME=ghcr.io/$REPO_LOWER/moodli_app:$VERSION" > docker.env
          echo $TWITTER_API_CRED >> docker.env
    #       docker-compose --env-file=docker.env build && docker images

    # # Login to GitHub's container registry
    #   - name: Registry Login
    #     run: echo $GITHUB_TOKEN | docker login -u $USER_NAME --password-stdin ghcr.io

    # # Push the image to the registry
    #   - name: Push Image
    #     run: docker-compose --env-file=docker.env push
    
    # Archive artifacts
      - name: Archive Docker env file
        uses: actions/upload-artifact@v2
        with:
          name: docker.env
          path: docker.env

# Continuous deployment 
  # CD:
    # needs: CI
    # runs-on: ubuntu-latest
    # permissions:
    #   packages: write
    #   contents: read

    # steps:
    # # Clone the repo
    #   - name: Check Out Repo 
    #     uses: actions/checkout@v2

    # # # Download artifacts from the last job
    # #   - name: Download artifacts from the CI stage
    # #     uses: actions/download-artifact@v2
    # #     with:
    # #       name: docker.env

    # # Setup SSH
    #   - name: Setup SSH
    #     run: |
    #       mkdir -p ~/.ssh
    #       echo "$SERVER_SSH_KEY" > ~/.ssh/id_rsa
    #       chmod 600 ~/.ssh/id_rsa 
    #       eval "$(ssh-agent -s)"
    #       ssh-add ~/.ssh/id_rsa
    #       ssh-keyscan -H $SERVER_IP > ~/.ssh/known_hosts

    # # Deployment prep.
    #   - name: Deployment Preparation
    #     run: |
    #       VERSION=$(echo "${GITHUB_SHA:0:6}")
    #       REPO_LOWER=$(echo $REPOSITORY | tr '[A-Z]' '[a-z]')
    #       echo "IMAGE_NAME=ghcr.io/$REPO_LOWER/moodli_app:$VERSION" > docker.env
    #       echo $TWITTER_API_CRED | base64 -d >> docker.env
    #       echo "echo $GITHUB_TOKEN | docker login -u $USER_NAME --password-stdin ghcr.io" | ssh $SERVER_USER_NAME@$SERVER_IP
    #       sed -e "s/build\: .//" -i ./docker-compose.yml
    #       scp docker-compose.yml docker.env $SERVER_USER_NAME@$SERVER_IP:~

    # # Deployment
    #   - name: Deployment
    #     run: |
    #       echo "docker-compose --env-file=docker.env down && yes | docker system prune && yes | docker volume prune && yes | docker image prune -a && docker-compose --env-file=docker.env up -d" | ssh $SERVER_USER_NAME@$SERVER_IP